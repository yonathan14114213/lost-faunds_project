version: '3.8'

services:

  server: 
    container_name: server-demo
    build:
      context: ./server
      dockerfile: Dockerfile
    develop:
      watch:
        - action: rebuild
          path: ./server/app/package.json
    ports: 
      - "4003:4003"
    networks:
      - app-network
    environment:
      CONNECTION_STRING: mongodb://mongodb:27017/myWeatherApp
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./server/app/dist:/server/dist
    # depends_on:
    #   - redis
    #   - mongodb

  client:
    container_name: client-demo
    build:
      context: ./client
      dockerfile: Dockerfile
    develop:
      watch:
      - action: rebuild
        path: ./client/app/package.json
    ports:
      - 8002:8002
    tty: true
    networks:
      - app-network 
    volumes:
      - type: bind
        source: ./client/app/src
        target: /client/src
    depends_on:
      # - redis
      # - mongodb
      - server

# # mongodb image

  # mongodb:
  #   container_name: mongodb
  #   image: mongo:4.4.27-rc0-focal
  #   restart: always
  #   ports:
  #     - '27017:27017'
  #   deploy:
  #       replicas: 1
  #   networks: 
  #     - app-network
  #   command: --wiredTigerCacheSizeGB 1.5 
  #   volumes:
  #     - mongodata:/data/db

# # redus image

  # redis:
  #   image: redis:latest
  #   restart: always
  #   networks:
  #     - app-network
  #   ports:
  #     - '6379:6379'
  #   command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
  #   volumes:
  #     - cache:/data
  #     - ./redis.conf:/mnt/c/Users/"moshe ilan"/Downloads
  

networks: 
  app-network:

# volumes:
#     cache:
#       driver: local
#     mongodata:
